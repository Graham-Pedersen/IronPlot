Take these off the list as you implement them:

map
fold
foldr
foldl
apply
match
pmatch
for
for*
for/list
for*/list
for/fold
for*/fold
Variable length arguments :: (lambda x (apply + x))
Keywords
vector
set
map
hash-map
set!
let
let*
letrec
values
let-values
let*-values
letrec-values
define
define-values
list
quote
module
define-syntax
syntax-case
syntax-rule
syntax-parse
cons
car
cdr
first
rest
quasiquote
unquote
unquote-splicing
+ - * / = eq? eqv? equal?
if
cond
struct

